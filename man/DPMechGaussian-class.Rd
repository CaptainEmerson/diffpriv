% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gaussian_mechanism.R
\docType{class}
\name{DPMechGaussian-class}
\alias{DPMechGaussian-class}
\alias{DPMechGaussian}
\alias{show,DPMechGaussian-method}
\alias{releaseResponse,DPMechGaussian,DPParamsDel-method}
\title{An S4 class for the Gaussian mechanism of differential privacy.}
\usage{
\S4method{show}{DPMechGaussian}(object)

\S4method{releaseResponse}{DPMechGaussian,DPParamsDel}(mechanism, privacyParams,
  X)
}
\arguments{
\item{object}{an instance of class \code{DPMech}.}

\item{mechanism}{an object of class \code{\link{DPMechGaussian}}.}

\item{privacyParams}{an object of class \code{\link{DPParamsDel}}.}

\item{X}{a privacy-sensitive dataset, if using sensitivity sampler a: list,
matrix, data frame, numeric/character vector.}
}
\value{
list with slots per argument, actual privacy parameter; Gaussian
  mechanism response with length of target release:
  \code{privacyParams, sensitivity, dims, target, response}.
}
\description{
A class that implements the Gaussian mechanism of differential privacy,
for privatizing numeric vector releases.
}
\section{Methods (by generic)}{
\itemize{
\item \code{show}: automatically prints the object.

\item \code{releaseResponse}: releases Gaussian mechanism responses.
}}

\section{Slots}{

\describe{
\item{\code{sensitivity}}{non-negative scalar numeric L2 target sensitivity.
Defaults to \code{Inf} for use with \code{sensitivitySampler()}.}

\item{\code{target}}{the target non-private function to be privatized, takes lists.
Defaults to a constant function. Gaussian mechanism assumes functions that
release numeric vectors of fixed dimension \code{dims}.}

\item{\code{gammaSensitivity}}{\code{NA_real_} if deactive, or scalar in [0,1)
indicating that responses must be RDP with specific confidence.}

\item{\code{dims}}{positive scalar numeric dimension of responses. Defaults to
\code{NA_integer_} for use with \code{sensitivitySampler()} which can
probe \code{target} to determine dimension.}
}}

\examples{
f <- function(xs) mean(xs)
n <- 100
m <- DPMechGaussian(sensitivity = 1/n, target = f, dims = 1)
X <- runif(n)
p <- DPParamsDel(epsilon = 1, delta = 0.1)
releaseResponse(m, p, X)
}
\references{
Cynthia Dwork and Aaron Roth. "Algorithmic Foundations of
Differential Privacy" Foundations and Trends in Theoretical Computer
Science. Now Publishers, 2014.
}
