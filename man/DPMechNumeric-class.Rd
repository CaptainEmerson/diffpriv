% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/numeric_mechanism.R
\docType{class}
\name{DPMechNumeric-class}
\alias{DPMechNumeric-class}
\alias{DPMechNumeric}
\alias{show,DPMechNumeric-method}
\alias{sensitivityNorm,DPMechNumeric-method}
\title{A virtual S4 class for differentially-private numeric mechanisms.}
\usage{
\S4method{show}{DPMechNumeric}(object)

\S4method{sensitivityNorm}{DPMechNumeric}(mechanism, X1, X2)
}
\arguments{
\item{object}{an instance of class \code{DPMech}.}

\item{mechanism}{an object of class \code{DPMechNumeric-class}.}

\item{X1}{a privacy-sensitive dataset, list if sensitivity sampler compatible.}

\item{X2}{a privacy-sensitive dataset, list if sensitivity sampler compatible.}
}
\value{
scalar numeric norm of non-private \code{target} on datasets.
}
\description{
A virtual class that implements common features of Laplace, Gaussian
mechanisms from differential privacy, for privatizing numeric vector
releases.
}
\section{Methods (by generic)}{
\itemize{
\item \code{show}: automatically prints the object.

\item \code{sensitivityNorm}: measures sensitivity of non-private \code{target}.
}}

\section{Slots}{

\describe{
\item{\code{sensitivity}}{non-negative scalar numeric target sensitivity.
Defaults to \code{Inf} for use with \code{sensitivitySampler()}.}

\item{\code{target}}{the target non-private function to be privatized, takes lists.
Defaults to a constant function. Laplace mechanism assumes functions that
release numeric vectors of fixed dimension \code{dims}.}

\item{\code{gammaSensitivity}}{\code{NA_real_} if deactive, or scalar in [0,1)
indicating that responses must be RDP with specific confidence.}

\item{\code{dims}}{positive scalar numeric dimension of responses. Defaults to
\code{NA_integer_} for use with \code{sensitivitySampler()} which can
probe \code{target} to determine dimension.}
}}

\examples{
f <- function(xs) mean(xs)
n <- 100
m <- DPMechLaplace(sensitivity = 1/n, target = f, dims = 1)
X1 <- runif(n)
X2 <- runif(n)
sensitivityNorm(m, X1, X2)
}
